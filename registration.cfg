	#debug_mode=yes

log_level=3
xlog_level=3
log_stderror=no
log_facility=LOG_LOCAL0

udp_workers=4

#socket=udp:192.168.1.102:5060   # CUSTOMIZE ME
socket=udp:192.168.1.104:5060
mpath= "/usr/local/lib64/opensips/modules"

#### SIGNALING module
loadmodule "signaling.so"

#### StateLess module
loadmodule "sl.so"


#### Transaction Module
loadmodule "tm.so"
modparam("tm", "fr_timeout", 5)
modparam("tm", "fr_inv_timeout", 30)
modparam("tm", "restart_fr_on_each_reply", 0)
modparam("tm", "onreply_avp_mode", 1)

#####dailog module ########
loadmodule "dialog.so"


#### Record Route Module
loadmodule "rr.so"
/* do not append from tag to the RR (no need for this script) */
modparam("rr", "append_fromtag", 0)

#### MAX ForWarD module
loadmodule "maxfwd.so"

#### SIP MSG OPerationS module
loadmodule "sipmsgops.so"

#### FIFO Management Interface
loadmodule "mi_fifo.so"
modparam("mi_fifo", "fifo_name", "/tmp/opensips_b2b_fifo")
modparam("mi_fifo", "fifo_mode", 0600)

#### USeR LOCation module
loadmodule "usrloc.so"
modparam("usrloc", "nat_bflag", "NAT")
modparam("usrloc", "working_mode_preset", "single-instance-sql-write-through")
modparam("usrloc", "db_url", "mysql://root:Manju#123@localhost/opensips_db")
#### REGISTRAR module
loadmodule "registrar.so"
modparam("registrar", "tcp_persistent_flag", "TCP_PERSISTENT")
/* uncomment the next line not to allow more than 10 contacts per AOR */
#modparam("registrar", "max_contacts", 10)


###### permission modile ###########
#loadmodule "permissions.so"


#### MYSQL module

#loadmodule "/usr/local/src/opensips-3.1.6/modules/db_mysql/db_mysql.so"
loadmodule "db_mysql.so"

#### AUTHentication modules
loadmodule "auth.so"
loadmodule "auth_db.so"
modparam("auth_db", "calculate_ha1", 1)
modparam("auth_db", "password_column", "password")
modparam("auth_db", "domain_column", "domain")

modparam("auth_db", "db_url", "mysql://root:Manju#123@localhost/opensips_db")

####protocol module #####
loadmodule "proto_udp.so"


####### Routing Logic ########

# main request routing logic

route{
 if(is_method("REGISTER"))
   {
                xlog("L_INFO", "Authenticating Register method \n");

                if(!www_authorize("","subscriber"))
                {
                www_challenge("","auth");
                exit;
                }


                if(!save("location"))
                {
                xlog("L_INFO","saving the AOR in to MYSQL table \n");
                sl_reply_error();
                exit;
                }
        }


}

	


